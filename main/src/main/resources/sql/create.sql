-- MySQL Script generated by MySQL Workbench
-- Wed Nov 11 15:36:59 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema social_network
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema social_network
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `social_network` DEFAULT CHARACTER SET utf8 ;
USE `social_network` ;

-- -----------------------------------------------------
-- Table `social_network`.`user_profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`user_profile` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_of_birth` DATE NOT NULL,
  `gender` ENUM("FEMALE", "MALE") NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(60) NOT NULL,
  `user_name` VARCHAR(50) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `creation_time` DATETIME NOT NULL,
  `user_profile_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_user_profile1_idx` (`user_profile_id` ASC),
  UNIQUE INDEX `user_name_UNIQUE` (`user_name` ASC),
  CONSTRAINT `fk_users_user_profile1`
    FOREIGN KEY (`user_profile_id`)
    REFERENCES `social_network`.`user_profile` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`community`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`community` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `admin_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_community_users1_idx` (`admin_id` ASC),
  CONSTRAINT `fk_community_users1`
    FOREIGN KEY (`admin_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`dialogs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`dialogs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `time_creation` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`messages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `message` VARCHAR(500) NOT NULL,
  `dialog_id` INT NOT NULL,
  `creation_time` DATETIME NOT NULL,
  INDEX `fk_message_users2_idx` (`user_id` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_messages_dialogs1_idx` (`dialog_id` ASC),
  CONSTRAINT `fk_message_users2`
    FOREIGN KEY (`user_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_messages_dialogs1`
    FOREIGN KEY (`dialog_id`)
    REFERENCES `social_network`.`dialogs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`friendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`friendship` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status` ENUM("REQUEST", "FRIEND", "BLOCKED", "DECLINED") NOT NULL,
  `user_one_id` INT NOT NULL,
  `user_two_id` INT NOT NULL,
  `action_user_id` INT NOT NULL,
  INDEX `fk_friendship_users1_idx` (`user_one_id` ASC),
  INDEX `fk_friendship_users2_idx` (`user_two_id` ASC),
  INDEX `fk_friendship_users3_idx` (`action_user_id` ASC),
  UNIQUE KEY `id_box_elements` (`user_one_id`,`user_two_id`),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_friendship_users1`
    FOREIGN KEY (`user_one_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_friendship_users2`
    FOREIGN KEY (`user_two_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_friendship_users3`
    FOREIGN KEY (`action_user_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`token` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `token_number` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`post` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_id` INT NOT NULL,
  `text` VARCHAR(500) NOT NULL,
  `date_of_creation` DATETIME NOT NULL,
  `community_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_post_users1_idx` (`users_id` ASC),
  INDEX `fk_post_community1_idx` (`community_id` ASC),
  CONSTRAINT `fk_post_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_community1`
    FOREIGN KEY (`community_id`)
    REFERENCES `social_network`.`community` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`dialogs_has_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`dialogs_has_users` (
  `dialogs_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`dialogs_id`, `users_id`),
  INDEX `fk_dialogs_has_users_users1_idx` (`users_id` ASC),
  INDEX `fk_dialogs_has_users_dialogs1_idx` (`dialogs_id` ASC),
  CONSTRAINT `fk_dialogs_has_users_dialogs1`
    FOREIGN KEY (`dialogs_id`)
    REFERENCES `social_network`.`dialogs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dialogs_has_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`likes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `post_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_like_post1_idx` (`post_id` ASC),
  INDEX `fk_like_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_like_post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `social_network`.`post` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`users_has_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`users_has_roles` (
  `users_id` INT NOT NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `roles_id`),
  INDEX `fk_users_has_roles_roles1_idx` (`roles_id` ASC),
  INDEX `fk_users_has_roles_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_roles_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_roles_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `social_network`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`community_has_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`community_has_users` (
  `community_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`community_id`, `users_id`),
  INDEX `fk_community_has_users_users1_idx` (`users_id` ASC),
  INDEX `fk_community_has_users_community1_idx` (`community_id` ASC),
  CONSTRAINT `fk_community_has_users_community1`
    FOREIGN KEY (`community_id`)
    REFERENCES `social_network`.`community` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_community_has_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `social_network`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
